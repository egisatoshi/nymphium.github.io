<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>lilyum ensemble</title>
    <description>lily, Aikatsu, Linux, Lua/MoonScript, and more</description>
    <link>https://nymphium.github.io/</link>
    <atom:link href="https://nymphium.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 27 May 2018 13:35:20 +0900</pubDate>
    <lastBuildDate>Sun, 27 May 2018 13:35:20 +0900</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Ensime-vimを入れる</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡
最近は死んでるのでコードも全然書いてませんでした｡&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;1&quot;&gt;1. はじめに&lt;/h1&gt;
&lt;p&gt;VimでScalaを書いている､というと赤黒いアイコンを思い出すかもしれないが､そんな感じになっている｡
動機としては､最近一切コードを書いてなかったのでなにか作ろうと思い､またScalaも以前から少し書いてみようと思っていたのでこの機会にと｡
Vimでやろうとしたのは当然手元に(Neo)Vimがあるからだ｡&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. プラギン&lt;/h1&gt;
&lt;h2 id=&quot;2-1-vim-scala&quot;&gt;2-1. &lt;a href=&quot;https://github.com/derekwyatt/vim-scala&quot;&gt;vim-scala&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;シンタックスハイライトが寂しいので入れる｡&lt;/p&gt;
&lt;h2 id=&quot;2-2-ensime-vim&quot;&gt;2-2. &lt;a href=&quot;https://github.com/ensime/ensime-vim&quot;&gt;ensime-vim&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Scalaも補完がされてほしい｡
VimでJava/Scalaというと､EclimというEclipseの情報をVimから引っ張ってグニャグニャするやつがありますが､俺達VimmerとしてはエディタのためにIDEを使うのはなんとなくはばかられる｡&lt;/p&gt;
&lt;p&gt;(中略)&lt;/p&gt;
&lt;p&gt;特にArchLinux(でyaourt)を使っており､Pythonなんて書かねーよハゲということでpipも基本的に触らない人用にインストールガイドを書こう｡
だいたいは&lt;a href=&quot;http://ensime.github.io/editors/vim/install/&quot;&gt;公式のインストールガイド&lt;/a&gt;に則ればいい｡&lt;/p&gt;
&lt;h3 id=&quot;2-2-1-python-modules&quot;&gt;2-2-1. Python modules&lt;/h3&gt;
&lt;p&gt;注意する点はpipに関する記述だが､Pythonは3で問題ない｡
pipでなくpacman/yourtに任せたいので､公式リポジトリから&lt;em&gt;python-websocket-client&lt;/em&gt;､AURから&lt;em&gt;python-sexpdata&lt;/em&gt;を引っ張る｡
後者は微妙にメンテされておらず､PKGSBUILDをいじる必要がある｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;# http -&amp;gt; httpsにするだけだが
&lt;span class=&quot;gd&quot;&gt;-source=(&quot;http://pypi.python.org/packages/source/s/sexpdata/sexpdata-${pkgver}.tar.gz&quot;)
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+source=(&quot;https://pypi.python.org/packages/source/s/sexpdata/sexpdata-${pkgver}.tar.gz&quot;)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;2-2-2-sbt-plugin&quot;&gt;2-2-2. sbt plugin&lt;/h3&gt;
&lt;p&gt;あとはsbtのグローバルプラグインに以下を追加する｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;addSbtPlugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.ensime&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;sbt-ensime&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2.6.0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sbtで&lt;code&gt;ensimeConfig&lt;/code&gt;を実行すると､プロジェクトルートに&lt;code&gt;.ensime&lt;/code&gt;が生成される｡&lt;/p&gt;
&lt;h2 id=&quot;2-3-neoformat&quot;&gt;2-3. &lt;a href=&quot;https://github.com/sbdchd/neoformat&quot;&gt;neoformat&lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;フォーマッター｡ScalaもscalafmtがあればOK｡
ただ何もしないとフォーマット時にファイル先頭にゴミが入るので以下をvimrcに追加&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;g:neoformat_scala_scalafmt&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;  \&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'exe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'scalafmt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;  \&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'replace'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;se&quot;&gt;  \&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;3&quot;&gt;3. おわりに&lt;/h1&gt;
&lt;p&gt;人生おわった&lt;/p&gt;</description>
        <pubDate>Sun, 27 May 2018 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2018/05/27/Ensime-vim%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2018/05/27/Ensime-vim%E3%82%92%E5%85%A5%E3%82%8C%E3%82%8B.html</guid>
        
        <category>Scala</category>
        
        <category>Vim</category>
        
        <category>ArchLinux</category>
        
        
      </item>
    
      <item>
        <title>コンパイラ中間言語およびその最適化の設計と実装</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡
年明けに買った対洗濯物用乾燥機のおかげで窓を開けたりカーテンレールにハンガーを吊るす日々が終わりました｡
ところで2月分の電気代はすでに1月分を越えようとしています｡&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;1&quot;&gt;1. はじめに&lt;/h1&gt;
&lt;p&gt;今年は4年次なので卒業研究! ということでjoin pointを追加したコンパイラ中間言語の設計と､その上での最適化を定義してやっていきました｡
実装はこちら&lt;/p&gt;
&lt;div class=&quot;github-widget&quot; data-repo=&quot;nymphium/joel&quot;&gt;&lt;/div&gt;
&lt;p&gt;卒研発表をスライドを作るためにも､何をしたかを噛み砕いて文に起こしてみたいと思います｡&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 関連研究&lt;/h1&gt;
&lt;p&gt;PLDI 2017で『Compiling without Continuations』&lt;sup id=&quot;fnref1&quot; title=&quot;Luke Maurer, et al. Compiling without Continuations. https://dl.acm.org/citation.cfm?id=3062380 &quot;&gt;&lt;a href=&quot;#fn1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;という発表がありました｡
継続の緑の本をもじったタイトルですが､CPSと直接戦っている感じではないです｡
join pointと呼ばれるものを明示的に扱うことでコードサイズの爆発を抑えたり高速に動作するターゲット言語に変換しようという試みです｡&lt;/p&gt;
&lt;h2 id=&quot;2-1-join-point&quot;&gt;2-1. join pointとは&lt;/h2&gt;
&lt;p&gt;プログラム&lt;a href=&quot;#joinpoint-example&quot;&gt;2.1&lt;/a&gt;における分岐した制御フローが合流する場所をjoin pointと呼ぶ｡
あるいは制御フローグラフ&lt;a href=&quot;#cfg&quot;&gt;2.2&lt;/a&gt;の赤点で囲んだ部分｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;プログラム&lt;a href=&quot;#joinpoint-example&quot;&gt;2.1&lt;/a&gt; join point example&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;center&gt;
&lt;img src=&quot;/pictures/2018-01-31-%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E4%B8%AD%E9%96%93%E8%A8%80%E8%AA%9E%E3%81%8A%E3%82%88%E3%81%B3%E3%81%9D%E3%81%AE%E6%9C%80%E9%81%A9%E5%8C%96%E3%81%AE%E5%AE%9F%E8%A3%85/cfg.png&quot; alt=&quot;cfg.png&quot;&gt;
&lt;label id=&quot;cfg&quot;&gt;&lt;/label&gt;
図&lt;a href=&quot;#cfg&quot;&gt;2.2&lt;/a&gt; 制御フローグラフ
&lt;/center&gt;
&lt;p&gt;CPSでは継続になるし､ANFではコード複製で表現することになる｡
ここで最適化するとコードサイズがボワーっとなってしまう｡
そこでMaurerらは\(\text{System F}_J\)という､合流点を明示的に扱う中間言語を提案した｡
合流点を用いることでコードサイズの爆発が抑えられ､さらに再帰的な合流点を用いることでstream fusionができることを示した｡&lt;/p&gt;
&lt;p&gt;しかしSystem Fjは純粋な必要呼びの､Haskellのような言語を対象としたコンパイラ中間言語として設計されたので､ジャバなどの広く使われているプログラム言語とはギャップがある｡&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 本研究&lt;/h1&gt;
&lt;p&gt;System Fjとその困った点を踏まえて､非純粋な値呼びの､明示的な合流点を持つコンパイラ中間言語\(Joel\)を提案する｡
非純粋性として､多くのプログラム言語で使われており､合流点と競合しそうなコントロールエフェクトを持っている例外を追加した｡&lt;/p&gt;
&lt;p&gt;例外を考慮した最適化を定義した｡
評価コンテキストをばらまく､commuting conversionの一種である最適化がtry-with式の位置を変えてトライキャッチプリキュアのメタモルフォーゼに失敗してプログラムの意味が変わってしまうのを防ぐために､
try-with式の含まれない評価コンテキストを新たに定義し､最適化規則に用いた｡&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 性能評価&lt;/h1&gt;
&lt;p&gt;Joel上の最適化を評価するため､CPS上で最適化されて生成されたターゲット言語との比較をおこなった｡
ソース言語にはOCamlのサブセットであるCore MLを新たに定義し､!!!!ターゲット言語はOCamlとした｡!!!!
これがあまりよくなかった｡&lt;/p&gt;
&lt;p&gt;CPSも､Double-Barreled CPSをもとに複数の例外をハンドルできるような体系を新たに定義した｡&lt;/p&gt;
&lt;h2 id=&quot;4-1-20180321&quot;&gt;4-1. 追記20180321&lt;/h2&gt;
&lt;p&gt;ここからしばらく嘘が書いてある!! ので途中は飛ばしてください｡
おわり&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;stream fusionがうまくいったけど全然速くならなかったという結果でした(&lt;a href=&quot;https://github.com/Nymphium/joel/blob/bachelor_thesis_poc/test/benchmark/benchmark.ml#L60&quot;&gt;このへんの例&lt;/a&gt;)｡
予備実験をすべきでしたが､つまるところ以下の例がOCamlではほとんど同じ速度で実行されます｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fold&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fold&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fold&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;なんでOCamlこれ同じ速度で動くんだ､分からんということでここからなんとかしなければならない…｡
ちなみに&lt;code&gt;map&lt;/code&gt;を20回くらいやったものと&lt;code&gt;(fun x y -&amp;gt; x + (y * y * y * y * ... * y))&lt;/code&gt;を&lt;code&gt;fold&lt;/code&gt;に渡すものだと実行速度に差が出ました｡
同じようなコードをLuaで書いたら即差が出ましたので､ターゲット言語によってはしっかり実行速度に関してアドが言えるんじゃないでしょうか｡&lt;/p&gt;
&lt;h2 id=&quot;20180321&quot;&gt;追記20180321&lt;/h2&gt;
&lt;p&gt;私の手抜きが原因でした｡
&lt;a href=&quot;http://localhost:4000/2017/11/18/OCaml%E3%81%A7eval%E3%81%97%E3%81%A6%E7%B5%90%E6%9E%9C%E3%82%92string%E3%81%A7%E5%BE%97%E3%82%8B.html&quot;&gt;この記事&lt;/a&gt;で書いたようなものを使ってベンチマークを取っていた(!!!!)わけですが､
どうやら&lt;code&gt;execute_phrase&lt;/code&gt;は&lt;em&gt;何回も実行していくうちに遅くなる&lt;/em&gt;(???)ということが後に発覚したため､ベンチマーク周りを0から再実装しました…｡
よくわからないと思いますがボクもよくわからないので､とりあえず皆さんお手元で試してみてください｡&lt;/p&gt;
&lt;p&gt;仕切り直しです｡
Haskellならともかく､OCamlはstream fusionなんてやらないぜ｡
&lt;a href=&quot;https://github.com/janestreet/core_bench&quot;&gt;core_bench&lt;/a&gt;で試してみましょう｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/src/20180131ps/test.ml&quot;&gt;src/20180131ps/test.ml&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;test.ml&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Core_bench&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Std&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foldl&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fused&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foldf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foldf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapf&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xs&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;nn&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self_init&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Core_bench&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nn&quot;&gt;Core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Bench&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_command&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;map&quot;&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;foldl&quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foldl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mapfold&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foldl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;fused&quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@@&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fused&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;うん&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell-session&quot; data-lang=&quot;shell-session&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ocamlfind ocamlopt &lt;span class=&quot;nt&quot;&gt;-package&lt;/span&gt; core_bench &lt;span class=&quot;nt&quot;&gt;-linkpkg&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-thread&lt;/span&gt; test.ml
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ./a.out &lt;span class=&quot;nt&quot;&gt;-ascii&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Estimated testing time 40s (4 benchmarks x 10s). Change using -quota SECS.

  Name      Time/Run      mWd/Run   mjWd/Run   Prom/Run   Percentage
 --------- ---------- ------------ ---------- ---------- ------------
  map       139.93us   30_004.72w     2.03kw     2.03kw       87.99%
  foldl      37.26us        5.00w                             23.43%
  mapfold   159.04us   30_009.71w     1.79kw     1.79kw      100.00%
  fused      49.41us        6.00w                             31.07%
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注目すべきは下2つですね｡
&lt;code&gt;mapfold&lt;/code&gt;は読んで字の如く&lt;code&gt;map&lt;/code&gt;して&lt;code&gt;fold&lt;/code&gt;してます｡
&lt;code&gt;fused&lt;/code&gt;は&lt;code&gt;map&lt;/code&gt;に渡す関数と&lt;code&gt;fold&lt;/code&gt;に渡す関数を一気に適用してるので中間リストを生成しないしtail recursionだし良いね｡
実行速度の差が無いって言ったやつ誰やねん…｡&lt;/p&gt;
&lt;p&gt;1つのベンチマークのうちに実行速度にだいぶ差があるベンチマーク関数があると&lt;code&gt;Time/Run&lt;/code&gt;の表示がだいぶ怪しい数字を出すことも分かったので､結局卒論提出版ではcore_benchのソースを参考にしてお手製ベンチマークで切り抜けました｡おわり｡&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;生成されるコードサイズに関しては､Joelによる最適化を経て得られたものが一番小さかったので､そこはadvantageがあったと言えます｡&lt;/p&gt;
&lt;h1 id=&quot;5&quot;&gt;5. おわりに&lt;/h1&gt;
&lt;p&gt;終わらないんだよなぁ…&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id=&quot;fn1&quot;&gt;
&lt;p&gt;Luke Maurer, et al. Compiling without Continuations. &lt;a href=&quot;https://dl.acm.org/citation.cfm?id=3062380&quot;&gt;https://dl.acm.org/citation.cfm?id=3062380&lt;/a&gt; &lt;a href=&quot;#fnref1&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;</description>
        <pubDate>Wed, 31 Jan 2018 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2018/01/31/%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E4%B8%AD%E9%96%93%E8%A8%80%E8%AA%9E%E3%81%8A%E3%82%88%E3%81%B3%E3%81%9D%E3%81%AE%E6%9C%80%E9%81%A9%E5%8C%96%E3%81%AE%E5%AE%9F%E8%A3%85.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2018/01/31/%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%A9%E4%B8%AD%E9%96%93%E8%A8%80%E8%AA%9E%E3%81%8A%E3%82%88%E3%81%B3%E3%81%9D%E3%81%AE%E6%9C%80%E9%81%A9%E5%8C%96%E3%81%AE%E5%AE%9F%E8%A3%85.html</guid>
        
        <category>OCaml</category>
        
        <category>卒研</category>
        
        <category>最適化</category>
        
        <category>コンパイラ</category>
        
        
      </item>
    
      <item>
        <title>大学院における日本学生支援機構の奨学金</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡
絶賛胃炎中で食事が老人並みになりました｡
新年あけまして暴飲が悪かったのか､ちょっと生っぽくて洗剤の味がした肉が悪かったのか､はたまた卒論によるストレスかー
とはいえ平時よりも少ない量の食事で動けるので燃費が良くなった､と思っていたが鏡を見ると頬が痩けた男が写っていてビビりました｡&lt;/p&gt;
&lt;h1 id=&quot;part-2a064f37de75b4c9&quot;&gt;はじめに&lt;/h1&gt;
&lt;p&gt;びしょ〜じょ君は1､2年次でテンプレ的なダメ学生を謳歌し､無事留年しました｡
留年確定の年の終わりに日本学生支援機構から借りていた奨学金も廃止されました｡
3年次以降は気を改めて講義に臨んだが､どうしても取れない単位があったり興味がないのでギリギリまで手を抜いたりなどしてGPA&lt;sup id=&quot;fnref1&quot; title=&quot;Grade Point Averageのアクロニム｡簡単にいうと成績を数値化したもの｡ &quot;&gt;&lt;a href=&quot;#fn1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;が芳しくなかった｡
さて､大学院で新たにびしょ〜じょ君は日本学生支援機構から奨学金を借りることができるのだろうか?&lt;/p&gt;
&lt;h1 id=&quot;part-2a00357080695c85&quot;&gt;おわりに&lt;/h1&gt;
&lt;p&gt;できた(完)&lt;/p&gt;
&lt;p&gt;しかも間口の広い第2種ではなく､無利子の第1種である｡
どうやら学部の成績は加味されないようだ｡
重要な点は､先生に素晴らしい推薦書を書いてもらえるかどうかのようだ｡&lt;/p&gt;
&lt;p&gt;学部で奨学金廃止されたみなさんも､大学院では再度借りることができるので､借金地獄を味わってください｡&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;(サンプル数: 1)&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id=&quot;fn1&quot;&gt;
&lt;p&gt;Grade Point Averageのアクロニム｡簡単にいうと成績を数値化したもの｡ &lt;a href=&quot;#fnref1&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;</description>
        <pubDate>Thu, 11 Jan 2018 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2018/01/11/%E5%A4%A7%E5%AD%A6%E9%99%A2%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E6%97%A5%E6%9C%AC%E5%AD%A6%E7%94%9F%E6%94%AF%E6%8F%B4%E6%A9%9F%E6%A7%8B%E3%81%AE%E5%A5%A8%E5%AD%A6%E9%87%91.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2018/01/11/%E5%A4%A7%E5%AD%A6%E9%99%A2%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E6%97%A5%E6%9C%AC%E5%AD%A6%E7%94%9F%E6%94%AF%E6%8F%B4%E6%A9%9F%E6%A7%8B%E3%81%AE%E5%A5%A8%E5%AD%A6%E9%87%91.html</guid>
        
        <category>雑感</category>
        
        
      </item>
    
      <item>
        <title>相互再帰の分解</title>
        <description>&lt;h1 id=&quot;part-3ef36be7cf2c473&quot;&gt;相互再帰とは&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://ja.wikipedia.org/wiki/%E7%9B%B8%E4%BA%92%E5%86%8D%E5%B8%B0&quot;&gt;https://ja.wikipedia.org/wiki/%E7%9B%B8%E4%BA%92%E5%86%8D%E5%B8%B0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;了解!!!&lt;/p&gt;
&lt;h1 id=&quot;example&quot;&gt;example&lt;/h1&gt;
&lt;p&gt;上記のウィキピージャの例を用いる｡
OCamlで表現するならこんな感じだろうか｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;example&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt;と&lt;code&gt;b&lt;/code&gt;が相互再帰となっている｡&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt;と&lt;code&gt;b&lt;/code&gt;は&lt;code&gt;and&lt;/code&gt;キーワードで同時に定義しないといけないんだろうか?&lt;/p&gt;
&lt;h1 id=&quot;part-65427f6cd2a&quot;&gt;分解&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt;を定義するなら､&lt;code&gt;b&lt;/code&gt;を外から受け取って使い､&lt;code&gt;b&lt;/code&gt;もまた逆を考えてみる｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;レッツ結合!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ちょっとまって､&lt;code&gt;b&lt;/code&gt;が無いやん! &lt;code&gt;b&lt;/code&gt;が欲しくて分解したのに……｡&lt;/p&gt;
&lt;h2 id=&quot;part-9622ee2d3edec720&quot;&gt;結合の解法&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;b&lt;/code&gt;を作るには&lt;code&gt;a&lt;/code&gt;が必要､しかし&lt;code&gt;a&lt;/code&gt;を作るには&lt;code&gt;b&lt;/code&gt;が必要､なら俺達はどうすればいい?&lt;/p&gt;
&lt;p&gt;ああそうか､&lt;code&gt;a&lt;/code&gt;の定義に&lt;code&gt;b&lt;/code&gt;が必要なら&lt;code&gt;b&lt;/code&gt;を作ればいい､&lt;code&gt;b&lt;/code&gt;は&lt;code&gt;a&lt;/code&gt;が必要だが､再帰関数の中に&lt;code&gt;a&lt;/code&gt;は存在できるから&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gen_b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gen_b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a'&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK!!!!!!!!!!!!!&lt;/p&gt;
&lt;h1 id=&quot;part-65422eac633&quot;&gt;ほか&lt;/h1&gt;
&lt;p&gt;この分解は&lt;em&gt;必ず&lt;/em&gt;可能なんですか?
ご連絡ください｡&lt;/p&gt;</description>
        <pubDate>Fri, 29 Dec 2017 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2017/12/29/%E7%9B%B8%E4%BA%92%E5%86%8D%E5%B8%B0%E3%81%AE%E5%88%86%E8%A7%A3.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2017/12/29/%E7%9B%B8%E4%BA%92%E5%86%8D%E5%B8%B0%E3%81%AE%E5%88%86%E8%A7%A3.html</guid>
        
        <category>OCaml</category>
        
        <category>関数</category>
        
        
      </item>
    
      <item>
        <title>筋肉偏差値70</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡これは&lt;a href=&quot;https://adventar.org/calendars/2573&quot;&gt;WORD Advent Calendar 2017&lt;/a&gt;の記事です｡&lt;/p&gt;
&lt;p&gt;12月23日といえば今上天皇の誕生日!!!! みんなで祝いましょう｡
この日はめでたいなぁ､国民の祝日にしましょう｡&lt;/p&gt;
&lt;h1 id=&quot;word&quot;&gt;WORDとは何か&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;center&gt;
&lt;span style=&quot;font-size: XX-LARGE&quot;&gt;!!!以下に詳細が!!!&lt;/span&gt;

&lt;p&gt;&lt;a href=&quot;https://www.word-ac.net/about/&quot;&gt;https://www.word-ac.net/about/&lt;/a&gt;
&lt;/p&gt;
&lt;/center&gt;
&lt;h1 id=&quot;1&quot;&gt;1. はじめに&lt;/h1&gt;
&lt;p&gt;ア〜&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. アレ&lt;/h1&gt;
&lt;p&gt;時は2016年の頭､我らがWORD部員である(当時)M2のN氏｡
就職先は地球防衛軍日本支部であるところの陸軍自衛隊であることを発表した｡
毎日角ふじ&lt;sup id=&quot;fnref1&quot; title=&quot;二郎系の麺ショップ｡味が云々というより依存性が高い｡量も多い｡ &quot;&gt;&lt;a href=&quot;#fn1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;へ行き毎日早起き筋トレをおこなうと告げ､可能な限り実行していた｡
そんなEDF隊員見習いの姿勢に俺達は感化された……!&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. ソレ&lt;/h1&gt;
&lt;p&gt;時は2016年の頭､テレビアニメ『ヴァルキリードライヴ マーメイド』&lt;sup id=&quot;fnref2&quot; title=&quot;http://valkyriedrive.jp/anime/ &quot;&gt;&lt;a href=&quot;#fn2&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;が放映されていた｡
激しいバトル､島やウイルスの謎､そしてちょっとエッチなサービスシーン､百合……｡
そんな中､武器を持たずに己が身一つで戦う&quot;ゼロ･アーム&quot;の異名を持つ魅力的なキャラクター､ &lt;strong&gt;&lt;em&gt;時雨霞&lt;/em&gt;&lt;/strong&gt; さん｡
パートナーの見城ひびきさんを想いながら強く戦い続ける姿勢に俺(達)は感化された……!
感化されすぎて2016年4月に髪型を時雨霞さんにした……!!!&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 筋肉ブートストラップ&lt;/h1&gt;
&lt;p&gt;一切の運動を放棄して棒に脂と皮が張り付いたような四肢の俺達ベルトコンベアーの理系BOYがダンベルを持ち上げようものなら肩が脱臼してしまう｡
まずは自重を使ったトレーニングから開始してダンベルプルーフな身体をビルドしなければならない｡&lt;/p&gt;
&lt;h1 id=&quot;5&quot;&gt;5. おわりに(未完)&lt;/h1&gt;
&lt;p&gt;EDF5を夜通しやってたら24日になっちゃった&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ここから別の記事&lt;/p&gt;
&lt;h1 id=&quot;multiple-exception-handlers-cps&quot;&gt;multiple exception handlersをCPS変換&lt;/h1&gt;
&lt;h1 id=&quot;6-2&quot;&gt;6. はじめに(2)&lt;/h1&gt;
&lt;p&gt;皆さんは例外処理のあるlambda calculusをCPS変換するとき､全てのコントロールエフェクトもCPSで済ませたいがために例外処理もCPS変換したくなるでしょう｡&lt;/p&gt;
&lt;h1 id=&quot;7-startup&quot;&gt;7. startup&lt;/h1&gt;
&lt;p&gt;以下のような言語を考える｡&lt;/p&gt;
&lt;div&gt;
$$
\begin{array}{rrl}
e  &amp;amp; ::= &amp;amp; x\mid \lambda x.e \mid e\,e\\
&amp;amp; \mid &amp;amp; e\,\mathbf{handle}\,\overrightarrow{\mathit{Exn}(x)\rightarrow e}\\
&amp;amp;\mid &amp;amp;\mathbf{raise}\,\mathit{Exn}(e)
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;\(e\,\mathbf{handle} \overrightarrow{\mathit{Exn}(x)\rightarrow e’}\)は実質\(\mathbf{try}\,e\,\mathbf{with}\,\overrightarrow{\mathit{Exn}(x)\rightarrow e’}\)ですね｡
操作的意味論は君の中に既にあるはずだ｡&lt;/p&gt;
&lt;h1 id=&quot;8-double-barreled-cps&quot;&gt;8. Double-Barreled CPS&lt;/h1&gt;
&lt;p&gt;既存の手法としてDouble-Barreled CPSというものが知られています&lt;sup id=&quot;fnref3&quot; title=&quot;Hayo Thielecke. Comparing Control Constructs by Double-Barrelled CPS &quot;&gt;&lt;a href=&quot;#fn3&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;｡
継続ともう一つ例外処理に対応する関数､つまりdouble-barreledなCPSを作ります｡&lt;/p&gt;
&lt;div&gt;
$$
\begin{array}{c}
    \fbox{$\lceil e\rceil = e_{cps}$}\\
    \begin{array}{rcl}
        \lceil \lambda x. e \rceil &amp;amp; = &amp;amp; \lambda k. \lambda h. \lambda x. \lambda k’. \lambda h’. \lceil e \rceil\, k’\, h’\\
        \lceil x \rceil &amp;amp; = &amp;amp; \lambda k. \lambda h. k\, x\\
        \lceil e_1\, e_2\rceil &amp;amp; = &amp;amp; \lambda k. \lambda h. \lceil e_1\rceil\,\left(\lambda f. \lceil e_2\rceil \left(\lambda a. f\,a\,k\,h\right)\,h\right)\,h\\
        \lceil e_1\,\mathbf{handle}\,\mathit{Exn}\left(x\right)\rightarrow e_2\rceil &amp;amp; = &amp;amp; \lambda k. \lambda h. \lceil e_1\rceil\, k\, \left(\lambda x. \lceil e_2\rceil\, k\,h\right) \\
        \lceil \mathbf{raise}\,\mathit{Exn}\left(e\right)\rceil &amp;amp; = &amp;amp; \lambda k.\lambda h.\lceil e\rceil \,h\,h\\
    \end{array}
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;\(e_{cps}\)は\(e\)のサブセットっぽいのでなんだかいい感じですね｡
例外ハンドラのアーム(\(Exn(x)\rightarrow e\))を継続として(\(\lambda x.\lceil e\rceil\)) 第2の継続パラメータに渡すわけですな｡
お察しの通り､この手法では1つの例外処理に対して1つの継続を追加している｡
では複数の例外処理に対して我々はどうする? まさかn+1-barreled CPS? いやいやそれはちょっと……｡&lt;/p&gt;
&lt;h1 id=&quot;9-multiple-exception-handling-cps&quot;&gt;9. multiple-exception handling CPS&lt;/h1&gt;
&lt;h2 id=&quot;9-1&quot;&gt;9-1. 近似&lt;/h2&gt;
&lt;p&gt;ハンドラを貯めて逐次ぶっ放すような感じにしていくか｡
\(h\)を(例外名とハンドラ関数のペア)のリストとして､初期値を空リストとして与える｡&lt;/p&gt;
&lt;div&gt;
&lt;label id=&quot;fig:approx&quot;&gt;&lt;/label&gt;
$$
\begin{array}{rcl}
    \lceil \lambda x.e\rceil_h &amp;amp; = &amp;amp; \lambda k. \lambda x.\lambda k’. \lceil e\rceil_h\, k’\\
    \lceil x\rceil_h &amp;amp; = &amp;amp; \lambda k. k\,x\\
    \lceil e_1\,e_2\rceil_h &amp;amp; = &amp;amp; \lambda k.\lceil e_1\rceil_h \left(\lambda f.\lceil e_2\rceil \left(\lambda a. f\,a\,k\right)\right)\\
    \left\lceil e\,\mathbf{handle}\,\overrightarrow{\mathit{Exn}\left(x\right)\rightarrow e’} \right\rceil_h &amp;amp; = &amp;amp; \lambda k.\lceil e\rceil_{h’}\,k\ %
        \mathit{where}\ h’ = \overrightarrow{\left(Exn,\lambda k’.\lambda x.\lceil e’\rceil\,k’\right)}\, @\, h\\
    %
    \left\lceil \mathbf{raise}\,\mathit{Exn}\left(e\right) \right\rceil_h &amp;amp; = &amp;amp;\left(%
        \begin{array}{ll}
            \lambda k.\lceil e\rceil_h f_\mathit{Exn}  &amp;amp; \mathrm{if}\,h=h’\,@\,\left(\left(\mathit{Exn}, f_\mathit{Exn}\right) :: \mathit{tl}\right)\\
            \mathrm{undefined} &amp;amp; \mathit{otherwise}
        \end{array}\right.
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;オッ? いい感じな気もするが……｡&lt;/p&gt;
&lt;h3 id=&quot;9-1-1&quot;&gt;9-1-1. 問題点&lt;/h3&gt;
&lt;p&gt;\(\lambda\)抽象を変換したあと､その関数を使うというときに困りそうです｡
次のようなケースを考えてみる｡&lt;/p&gt;
&lt;div&gt;
&lt;label id=&quot;fig:example&quot;&gt;&lt;/label&gt;
$$
\begin{array}{rcl}
\begin{array}{l}
\mathbf{let}\,f\,x=\mathbf{raise}\,\mathit{Exn}\left(x\right)\,\mathbf{in}\\
f\,m\,\mathbf{handle}\,\mathit{Exn}\left(x\right)\rightarrow x
\end{array} &amp;amp;=&amp;amp;%
\left(\lambda f. f\,m\,\mathbf{handle}\,\mathit{Exn}\left(x\right)\rightarrow x\right)\,%
\left(\lambda x.\mathbf{raise}\,\mathit{Exn}\left(x\right)\right)
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;関数fの中でraiseしとります｡
&lt;a href=&quot;#fig:approx&quot;&gt;9.1&lt;/a&gt;で変換するとどうなるか……?&lt;/p&gt;
&lt;p&gt;どうなるかというと､引数である\(\lambda\)の中のraiseをちゃんとハンドルできないので爆発します｡
これはなぜか｡
&lt;a href=&quot;#fig:approx&quot;&gt;9.1&lt;/a&gt;では\(\lambda\)抽象を作る際のハンドラはそのコンテキストで生まれたハンドラを使ってしまっているので､
外側のコンテキストである関数内のhandleが作るハンドラ群を使えないのである｡&lt;/p&gt;
&lt;h1 id=&quot;10&quot;&gt;10. 解法&lt;/h1&gt;
&lt;p&gt;ハンドラをダイナミックにばらまくので､記述言語だけで回していくには厳しい｡&lt;/p&gt;
&lt;h2 id=&quot;10-1-syntax&quot;&gt;10-1. syntax&lt;/h2&gt;
&lt;p&gt;のでCPS termを拡張したい｡&lt;/p&gt;
&lt;div&gt;
&lt;label id=&quot;fig:syn&quot;&gt;&lt;/label&gt;
$$
\begin{array}{rrl}
e_{cps} &amp;amp; ::= &amp;amp; x \mid \lambda x. e_{cps} \mid e_{cps}\, e_{cps}\\
        &amp;amp; \mid&amp;amp; \left[\right] \\
        &amp;amp; \mid&amp;amp; e_{cps} :: e_{cps} \mid e_{cps} @ e_{cps} \\
        &amp;amp; \mid&amp;amp; \left(\mathit{Exn}, e_{cps} \right)\\
        &amp;amp; \mid&amp;amp; \mathbf{lookup}(\mathit{Exn}, e_{cps})\\
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;はい&lt;/p&gt;
&lt;h2 id=&quot;10-2&quot;&gt;10-2. 変換規則&lt;/h2&gt;
&lt;div&gt;
$$
\begin{array}{c}
    \fbox{$\lceil e\rceil=e_{cps}$}\\
    \begin{array}{rcl}
        \lceil \lambda x.e\rceil &amp;amp; = &amp;amp;%
            \lambda k. \lambda h. \lambda x.\lambda k’. \lambda h’.  \lceil e\rceil\, k’\, h’\\
        \lceil x\rceil &amp;amp; = &amp;amp; \lambda k. \lambda h. k\,x\\
        \lceil e_1\,e_2\rceil &amp;amp; = &amp;amp;%
            \lambda k. \lambda h. \lceil e_1\rceil \left(\lambda f.\lceil e_2\rceil \left(\lambda a. f\,a\,k\,h\right)\, h\right)\, h\\
        \left\lceil e\,\mathbf{handle}\,\overrightarrow{\mathit{Exn}\left(x\right)\rightarrow e’} \right\rceil &amp;amp; = &amp;amp;%
            \lambda k.\lambda h. \lceil e\rceil\,k\, \left(\overrightarrow{\left(\mathit{Exn},\lambda k’.\lambda h’. \lceil e’ \rceil\, k’\,h’\right)} \,@\, h\right) \ \\
        \left\lceil \mathbf{raise}\,\mathit{Exn}\left(e\right) \right\rceil &amp;amp; = &amp;amp; \lambda k.\lambda h. \left(\lambda f_\mathit{Exn}. \lceil e \rceil\, f_\mathit{Exn}\,f_\mathit{Exn} \right) \mathbf{lookup}\left(\mathit{Exn},h\right)
    \end{array}
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;先程の&lt;a href=&quot;#fig:example&quot;&gt;例&lt;/a&gt;を変換してみましょう｡&lt;/p&gt;
&lt;div&gt;
$$
\begin{array}{rcl}
    \lceil e\rceil &amp;amp; = &amp;amp; \lambda k. \lambda h. \left\lceil \lambda f. f\,m\,\mathbf{handle}\,\mathit{Exn}\left(x\right)\rightarrow x \right\rceil%
        \left(\lambda f. \left\lceil \lambda x.\mathbf{raise}\,\mathit{Exn}\left(x\right) \right\rceil \left( \lambda a. f\,a\,k\,h\right)\,h\right)\,h\\
      &amp;amp;=&amp;amp; \lambda k.\lambda h. \left(\lambda k_0.\lambda h_0. \lambda f. \lambda k_0’. \lambda h_0’.  \left(\left(\lambda k_2.\lambda h_2. \left(\lambda k_3.\lambda h_3. k_3\,f\right) \left(\lambda f’.  \left(\lambda k_4.\lambda h_4. k_4\,m\right) \left(\lambda m’. f’\,m’\,k_2\,h_2 \right)\,h_2 \right)\,h_2\right)\, k_1\, \left(\left(\mathit{Exn}, \lambda k_5.\lambda h_5.\lambda x. \lambda k_6. \lambda h_6. k_6\,x\right) \,::\, h_1\right)\right) \, k_0’\,h_0’\right) \left(\lambda f. (\lambda k_7. \lambda h_7. \lambda x. \lambda k_7’. \lambda h_7’. \left(\lambda k_8. \lambda h_8. \left(\lambda f_\mathit{Exn}.  \left(\lambda k_9. \lambda h_9. k_9 x\right) f_\mathit{Exn} f_\mathit{Exn}\right) \mathbf{lookup}\left(\mathit{Exn}, h_8\right)\right) k_7’\,h_7’)\, \left(\lambda a. f\,a\,k\,h\right)\, h \right)\,h
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;こんなもんですか? あとは作者の気持ちに沿ってrunしていくと&lt;/p&gt;
&lt;div&gt;
$$
\mathit{run}\, \lceil e\rceil = \lceil e\rceil \left(\lambda k. k\right) [] = \cdots \cdots
$$
&lt;/div&gt;
&lt;p&gt;あ〜〜やりたくない､これは読者の皆さんへの課題としますが､多分いい感じにハンドラが動くんでしょう｡&lt;/p&gt;
&lt;h2 id=&quot;10-3-20171225&quot;&gt;10-3. 追記20171225&lt;/h2&gt;
&lt;p&gt;素晴らしいことに変換規則が間違ってますね｡&lt;/p&gt;
&lt;p&gt;次のような感じだと正解だろうか｡&lt;/p&gt;
&lt;div&gt;
$$
\begin{array}{rcl}
    \lceil \lambda x.e\rceil &amp;amp; =&amp;amp;%
        \lambda k. \lambda h. k \left(\lambda x.\lambda k’. \lambda h’.  \lceil e\rceil\, k’\, h’\right)\\
    \lceil x\rceil &amp;amp; = &amp;amp; \lambda k. \lambda h. k\,x\\
    \lceil e_1\,e_2\rceil &amp;amp; = &amp;amp;%
        \lambda k. \lambda h. \lceil e_1\rceil \left(\lambda f.\lceil e_2\rceil \left(\lambda a. f\,a\,k\,h\right)\, h\right)\, h\\
    \lceil e\,\mathbf{handle}\,\overrightarrow{\mathit{Exn}\left(x\right)\rightarrow e’} \rceil &amp;amp; = &amp;amp;%
        \lambda k.\lambda h. \lceil e\rceil\,k\, \left(\overrightarrow{\left(\mathit{Exn},\lambda x. \lceil e’ \rceil\, k\,h\right)} \,@\, h\right) \ \\
    \lceil \mathbf{raise}\,\mathit{Exn}\left(e\right) \rceil &amp;amp; =&amp;amp; \lambda k.\lambda h. \lceil e\rceil \left(\lambda v. \left(\mathbf{lookup}\left(\mathit{Exn}, h\right)\right)\, v\right)\, h
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;正しさを検証するのは皆さんへの宿題とします｡
かんたんな実装を載せますんで後は頼んだ｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/Nymphium/b5864f0f774fcf45bb18d5a27e395be0&quot;&gt;https://gist.github.com/Nymphium/b5864f0f774fcf45bb18d5a27e395be0&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;11-2&quot;&gt;11. おわりに(2)&lt;/h1&gt;
&lt;p&gt;という話を明日研究室のゼミで話すかもしれない｡&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id=&quot;fn1&quot;&gt;
&lt;p&gt;二郎系の麺ショップ｡味が云々というより依存性が高い｡量も多い｡ &lt;a href=&quot;#fnref1&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://valkyriedrive.jp/anime/&quot;&gt;http://valkyriedrive.jp/anime/&lt;/a&gt; &lt;a href=&quot;#fnref2&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn3&quot;&gt;
&lt;p&gt;Hayo Thielecke. Comparing Control Constructs by Double-Barrelled CPS &lt;a href=&quot;#fnref3&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;</description>
        <pubDate>Sat, 23 Dec 2017 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2017/12/23/%E7%AD%8B%E8%82%89%E5%81%8F%E5%B7%AE%E5%80%A470.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2017/12/23/%E7%AD%8B%E8%82%89%E5%81%8F%E5%B7%AE%E5%80%A470.html</guid>
        
        <category>雑感</category>
        
        <category>筋肉</category>
        
        <category>WORD</category>
        
        <category>CPS</category>
        
        
      </item>
    
      <item>
        <title>LaTeXライティング</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡これは&lt;a href=&quot;https://adventar.org/calendars/2573&quot;&gt;WORD Advent Calendar 2017&lt;/a&gt;の記事です｡&lt;/p&gt;
&lt;p&gt;12月21日といえば……特になにも思いつきませんでした｡
あえて挙げるなら片岡鶴太郎､安斎肇､フランク・ザッパの誕生日だそうです(Wikipedia調べ)｡みんなで祝いましょう｡&lt;/p&gt;
&lt;h1 id=&quot;word&quot;&gt;WORDとは何か&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;center&gt;
&lt;span style=&quot;font-size: XX-LARGE&quot;&gt;!!!以下に詳細が!!!&lt;/span&gt;

&lt;p&gt;&lt;a href=&quot;https://www.word-ac.net/about/&quot;&gt;https://www.word-ac.net/about/&lt;/a&gt;
&lt;/p&gt;
&lt;/center&gt;
&lt;h1 id=&quot;1&quot;&gt;1. はじめに&lt;/h1&gt;
&lt;p&gt;WORDは一太郎と\(\LaTeX\)で制作されており､後者が今のメインストリームとなっています｡
WORD記事のテンプレート&lt;sup id=&quot;fnref1&quot; title=&quot;https://github.com/WORD-COINS/article-template &quot;&gt;&lt;a href=&quot;#fn1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;を引っ張って編集してWORDのGitサーバーにpushするとJenkinsが動きヒラギノが埋め込まれたpdfファイルが出来上がる……というシステム｡素晴らしい｡&lt;/p&gt;
&lt;p&gt;私もWORD記事以外でもよくLaTeXを使います｡
たとえば講義ノートを取る､Beamerでスライドを作る､ゼミ資料を作る､等々｡&lt;/p&gt;
&lt;p&gt;ではどうやってLaTeXを書いているのか?
今回は私のLaTeX編集環境を少し紹介します｡&lt;/p&gt;
&lt;h1 id=&quot;2-neo-vim&quot;&gt;2. (Neo)Vim&lt;/h1&gt;
&lt;p&gt;エディターにはNeovimを使っています｡
asynchronouslyにmakeをやってくれるNeomake&lt;sup id=&quot;fnref2&quot; title=&quot;https://github.com/neomake/neomake &quot;&gt;&lt;a href=&quot;#fn2&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;とかありますんで､でもVim 8でもasync jobsが使えるようになったとのことでどっちでもいいです｡&lt;/p&gt;
&lt;p&gt;次のVimtexが重要｡&lt;/p&gt;
&lt;h2 id=&quot;2-1-vimtex3&quot;&gt;2-1. Vimtex&lt;sup id=&quot;fnref3&quot; title=&quot;https://github.com/lervag/vimtex &quot;&gt;&lt;a href=&quot;#fn3&quot; rel=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;/h2&gt;
&lt;p&gt;Vimで快適にLaTeXを編集するためのプラグイン｡
まずSyntax highlightingがきれい｡
偉いので､LuaLaTeXでLuaを埋め込んでいるときもちゃんとLuaをハイライトしてくれる｡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/pictures/2017-12-21-LaTeX%E3%83%A9%E3%82%A4%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/vimtex-highlight.png&quot; alt=&quot;syntax highlight with vimtex&quot; title=&quot;syntax highlight with vimtex&quot;&gt;&lt;/p&gt;
&lt;p&gt;そして大量にキーバインドを追加してくるので&lt;sup id=&quot;fnref4&quot; title=&quot;https://github.com/lervag/vimtex/wiki/usage#default-mappings &quot;&gt;&lt;a href=&quot;#fn4&quot; rel=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;､これを覚えると高速な編集ができる｡
他のキーバインドと競合しないように気をつけよう｡&lt;/p&gt;
&lt;p&gt;他にも環境の&lt;code&gt;begin&lt;/code&gt;と&lt;code&gt;end&lt;/code&gt;の対応が取れてpercentage-wiseなカーソル移動ができる｡
コマンドの補完もしてくれるため､Neocomplete&lt;sup id=&quot;fnref5&quot; title=&quot;https://github.com/Shougo/neocomplete.vim completion for Vim &quot;&gt;&lt;a href=&quot;#fn5&quot; rel=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;/Deoplete&lt;sup id=&quot;fnref6&quot; title=&quot;https://github.com/Shougo/deoplete.nvim completion for Neovim &quot;&gt;&lt;a href=&quot;#fn6&quot; rel=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;と連携して補完を効かせると非常に高速なエディットが可能となる｡&lt;/p&gt;
&lt;h2 id=&quot;2-2-vim-surround7&quot;&gt;2-2. vim-surround&lt;sup id=&quot;fnref7&quot; title=&quot;https://github.com/tpope/vim-surround &quot;&gt;&lt;a href=&quot;#fn7&quot; rel=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;
&lt;/h2&gt;
&lt;p&gt;visual modeで&lt;code&gt;S-&amp;lt;leader&amp;gt;&lt;/code&gt;と入力すると環境を作ってくれる｡
地味に便利｡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/pictures/2017-12-21-LaTeX%E3%83%A9%E3%82%A4%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0/surround-env.gif&quot; alt=&quot;surround environment&quot; title=&quot;surround environment with vim-surround&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;WORD記事テンプレートにはすでにMakefileとlatexmkrcが付属されているが､これについても少し解説したい｡&lt;/p&gt;
&lt;h1 id=&quot;3-latexmk8-9&quot;&gt;3. Latexmk&lt;sup id=&quot;fnref8&quot; title=&quot;http://personal.psu.edu/jcc8//software/latexmk &quot;&gt;&lt;a href=&quot;#fn8&quot; rel=&quot;footnote&quot;&gt;8&lt;/a&gt;&lt;/sup&gt;&lt;sup&gt;,&lt;/sup&gt;&lt;sup id=&quot;fnref9&quot; title=&quot;https://texwiki.texjp.org/?Latexmk &quot;&gt;&lt;a href=&quot;#fn9&quot; rel=&quot;footnote&quot;&gt;9&lt;/a&gt;&lt;/sup&gt;
&lt;/h1&gt;
&lt;p&gt;とにかく偉大｡
BibTeXやrefererence関係などをエイヤッとやってくれる偉い人です｡
&lt;code&gt;function platex() { =platex $1 &amp;amp;&amp;amp; =platex $1}&lt;/code&gt; みたいなものを.bashrcなどに書かなくてよくなります｡偉いね｡
~/.latexmkrcまたはcwdのlatexmkrcに設定ファイルを置くと記述に沿った動きをしてくれる｡&lt;/p&gt;
&lt;p&gt;[&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;]のlatexmkrcを見てみましょう｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WORD-COINS/article-template/blob/master/articles/hinagata/latexmkrc&quot;&gt;articles/hinagata/latexmkrc&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;codeline with_caption&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;latexmkrc&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-perl&quot; data-lang=&quot;perl&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env perl&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$pdflatex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'lualatex %O -synctex=1 -interaction=nonstopmode -shell-escape %B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$latex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'platex %O -synctex=1 -interaction=nonstopmode -kanji=utf8 -shell-escape %B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$bibtex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'pbibtex %O -kanji=utf8 %B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dvipdf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dvipdfmx %O -p jisb5 -d 5 -o %D %S'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$makeindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'mendex %O -U -r -c -g -s %B -p any %B'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pdf_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$pdf_update_method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;例えば&lt;code&gt;$pdflatex&lt;/code&gt;で&lt;code&gt;latexmk -pdf&lt;/code&gt;としたときに動くコマンドを定義します｡
&lt;code&gt;%O&lt;/code&gt;には入力ファイル名､&lt;code&gt;%B&lt;/code&gt;には拡張子なしの入力ファイル名､等々フォーマット文字列になっており｡&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$pdf_mode&lt;/code&gt;でpdf出力方式を選びます｡&lt;code&gt;3&lt;/code&gt;が入っているのでdviファイルから&lt;code&gt;$dvipdf&lt;/code&gt;コマンドでpdfに変換する方式を取ります｡&lt;/p&gt;
&lt;p&gt;また&lt;code&gt;-pvc&lt;/code&gt;オプションという､ソースファイル及び&lt;em&gt;そのファイルが参照しているファイル&lt;/em&gt;が編集されるたびにコンパイルをおこなってくれるという便利なノンストップモードがあります｡&lt;/p&gt;
&lt;p&gt;とにかく偉い｡他にもオプションがいろいろあります｡
&lt;code&gt;latex&lt;/code&gt;コマンド直叩きの時代は終わったんや……!&lt;/p&gt;
&lt;h1 id=&quot;4-make&quot;&gt;4. Make&lt;/h1&gt;
&lt;p&gt;latexmkを知らない人はいるかもしれないが､makeを知らない人は居ないでしょう｡
またcwdにMakefileがあるとmakeを実行してしまうという人間の心理を突くこともできます｡&lt;/p&gt;
&lt;p&gt;例によって[&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;]のMakefileを見てみましょう｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WORD-COINS/article-template/blob/master/articles/hinagata/Makefile&quot;&gt;articles/hinagata/Makefile&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;codeline with_caption&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;Makefile&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-make&quot; data-lang=&quot;make&quot;&gt;&lt;span class=&quot;nv&quot;&gt;MAKE&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; make
&lt;span class=&quot;nv&quot;&gt;LATEXMK&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; latexmk
&lt;span class=&quot;nv&quot;&gt;LATEXMKFLAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-halt-on-error&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CP&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RM&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;SRC&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; main

&lt;span class=&quot;nv&quot;&gt;TARGET&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;addsuffix .pdf, &lt;span class=&quot;nv&quot;&gt;$(SRC)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;TEXFILES&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; ../../texfiles

&lt;span class=&quot;nv&quot;&gt;CLASS&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; word
&lt;span class=&quot;nv&quot;&gt;TEXDEPS&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;foreach deps, &lt;span class=&quot;nv&quot;&gt;$(CLASS)&lt;/span&gt;.cls, &lt;span class=&quot;nv&quot;&gt;$(TEXFILES)&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(deps)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;TEXDTX&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;addsuffix .dtx, &lt;span class=&quot;nv&quot;&gt;$(TEXFILES)&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(CLASS)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;TEXINS&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;addsuffix .ins, &lt;span class=&quot;nv&quot;&gt;$(TEXFILES)&lt;/span&gt;/&lt;span class=&quot;nv&quot;&gt;$(CLASS)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;all continue clean&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;$(SRC).pdf&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;%.pdf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;%.tex $(TEXDEPS)&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(MAKE)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(TEXDEPS)&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(LATEXMK)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(LATEXMKFLAG)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$&amp;lt;&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	LATEXMKFLAG +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-pvc&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(MAKE)&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;$(TEXDEPS)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;$(TEXDTX) $(TEXINS)&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;LATEXMKFLAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$(LATEXMKFLAG)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(MAKE)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(CLASS)&lt;/span&gt;.cls &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(TEXFILES)&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(CP)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;foreach deps, &lt;span class=&quot;nv&quot;&gt;$(TEXDEPS)&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;$(deps)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ./

&lt;span class=&quot;nl&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(MAKE)&lt;/span&gt; clean &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(TEXFILES)&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(RM)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(TEXDEPS)&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(LATEXMK)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;主にlatexmkをラップする形になります｡
&lt;code&gt;make&lt;/code&gt;でpdfができて､&lt;code&gt;make continue&lt;/code&gt;で先述のノンストップモードになり&lt;code&gt;make clean&lt;/code&gt;で生成されたファイルを消してくれる｡&lt;/p&gt;
&lt;h1 id=&quot;5-detexify10&quot;&gt;5. Detexify&lt;sup id=&quot;fnref10&quot; title=&quot;http://detexify.kirelabs.org/classify.html &quot;&gt;&lt;a href=&quot;#fn10&quot; rel=&quot;footnote&quot;&gt;10&lt;/a&gt;&lt;/sup&gt;
&lt;/h1&gt;
&lt;p&gt;こんな感じの記号を出したい､というときキャンパスにお絵かきすると､コマンド名と必要なパッケージを出してくれる非常に極めて偉大なツール｡
バックエンドはHaskellのようです&lt;sup id=&quot;fnref11&quot; title=&quot;https://github.com/kirel/detexify-hs-backend &quot;&gt;&lt;a href=&quot;#fn11&quot; rel=&quot;footnote&quot;&gt;11&lt;/a&gt;&lt;/sup&gt;｡&lt;/p&gt;
&lt;h1 id=&quot;6-word-slack-latex-channel&quot;&gt;6. WORD Slack #latex channel&lt;/h1&gt;
&lt;p&gt;WORD部員達がLaTeXに関する議論をしたり[&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;]やWORDクラスファイル&lt;sup id=&quot;fnref12&quot; title=&quot;https://github.com/WORD-COINS/texfiles &quot;&gt;&lt;a href=&quot;#fn12&quot; rel=&quot;footnote&quot;&gt;12&lt;/a&gt;&lt;/sup&gt;のGitHubでのアクティビティーが流れてくるWORD slackのチャンネル｡&lt;/p&gt;
&lt;h1 id=&quot;7&quot;&gt;7. おわりに&lt;/h1&gt;
&lt;p&gt;WORD Advent Calendar21日目がまったく埋まる気配がないので筆を執った次第ですが､結局情報量が少ない文書になりました｡
xmodmapで超高速記号タイピングなども書きたかったんですが余力が無いのでまた別の機会に｡&lt;/p&gt;
&lt;p&gt;ちなみに\(\LaTeX\)は&quot;ラテック&quot;と発音するよ派です｡
人と会話するとき相手が&quot;ラテフ&quot;と発音したら波風立てたくないのでそれに従うけどうっかり&quot;ラテック&quot;と言っちゃうよ派でもあります｡
“ラテックス&quot;っつったらお前それハーピーレディサイバーボンテージが着てるやつの素材じゃん&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id=&quot;fn1&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WORD-COINS/article-template&quot;&gt;https://github.com/WORD-COINS/article-template&lt;/a&gt; &lt;a href=&quot;#fnref1&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn2&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/neomake/neomake&quot;&gt;https://github.com/neomake/neomake&lt;/a&gt; &lt;a href=&quot;#fnref2&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn3&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lervag/vimtex&quot;&gt;https://github.com/lervag/vimtex&lt;/a&gt; &lt;a href=&quot;#fnref3&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn4&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/lervag/vimtex/wiki/usage#default-mappings&quot;&gt;https://github.com/lervag/vimtex/wiki/usage#default-mappings&lt;/a&gt; &lt;a href=&quot;#fnref4&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn5&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Shougo/neocomplete.vim&quot;&gt;https://github.com/Shougo/neocomplete.vim&lt;/a&gt; completion for Vim &lt;a href=&quot;#fnref5&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn6&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Shougo/deoplete.nvim&quot;&gt;https://github.com/Shougo/deoplete.nvim&lt;/a&gt; completion for Neovim &lt;a href=&quot;#fnref6&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn7&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tpope/vim-surround&quot;&gt;https://github.com/tpope/vim-surround&lt;/a&gt; &lt;a href=&quot;#fnref7&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn8&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://personal.psu.edu/jcc8//software/latexmk&quot;&gt;http://personal.psu.edu/jcc8//software/latexmk&lt;/a&gt; &lt;a href=&quot;#fnref8&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn9&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://texwiki.texjp.org/?Latexmk&quot;&gt;https://texwiki.texjp.org/?Latexmk&lt;/a&gt; &lt;a href=&quot;#fnref9&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn10&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://detexify.kirelabs.org/classify.html&quot;&gt;http://detexify.kirelabs.org/classify.html&lt;/a&gt; &lt;a href=&quot;#fnref10&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn11&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/kirel/detexify-hs-backend&quot;&gt;https://github.com/kirel/detexify-hs-backend&lt;/a&gt; &lt;a href=&quot;#fnref11&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn12&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/WORD-COINS/texfiles&quot;&gt;https://github.com/WORD-COINS/texfiles&lt;/a&gt; &lt;a href=&quot;#fnref12&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;</description>
        <pubDate>Thu, 21 Dec 2017 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2017/12/21/LaTeX%E3%83%A9%E3%82%A4%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2017/12/21/LaTeX%E3%83%A9%E3%82%A4%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0.html</guid>
        
        <category>LaTeX</category>
        
        <category>WORD</category>
        
        
      </item>
    
      <item>
        <title>Menhirが便利</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡これは&lt;a href=&quot;https://adventar.org/calendars/2573&quot;&gt;WORD Advent Calendar 2017&lt;/a&gt;の記事です｡&lt;/p&gt;
&lt;p&gt;12月3日といえば冴草きいちゃんの誕生日!!!! みんなで祝いましょう｡
と思ったら『NEW GAME!』の遠山りんさんの誕生日でもあるのか!! この日はめでたいなぁ､国民の祝日にしましょう｡&lt;/p&gt;
&lt;h1 id=&quot;word&quot;&gt;WORDとは何か&lt;/h1&gt;
&lt;p&gt;&lt;/p&gt;&lt;center&gt;
&lt;span style=&quot;font-size: XX-LARGE&quot;&gt;!!!以下に詳細が!!!&lt;/span&gt;

&lt;p&gt;&lt;a href=&quot;https://www.word-ac.net/about/&quot;&gt;https://www.word-ac.net/about/&lt;/a&gt;
&lt;/p&gt;
&lt;/center&gt;
&lt;h1 id=&quot;1&quot;&gt;1. はじめに&lt;/h1&gt;
&lt;p&gt;みなさんOCamlは書いてますか｡今年はほとんどOCamlとLaTeXしか書いてません｡
OCamlといえばメタランゲージとのことですので､メタランゲージでランゲージを作りたくなります｡
syntax.mlみたいなファイルにデータタイプを定義して､そのあとどうしますか｡
全部手打ちでしょうか､それとも…&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. パーザージェネレーター&lt;/h1&gt;
&lt;p&gt;人類は偉い!
人類は偉いのでパーザー自体を書かずともいい雰囲気のものを書くとパーザーを作ってくれる&lt;em&gt;パーザージェネレーター&lt;/em&gt;というものがあります｡
(中略)&lt;/p&gt;
&lt;h1 id=&quot;3-menhir&quot;&gt;3. Menhir&lt;/h1&gt;
&lt;p&gt;OCamlといえばocamlyaccを先に思いつきがちですが､Menhir&lt;sup id=&quot;fnref1&quot; title=&quot;http://gallium.inria.fr/~fpottier/menhir/ &quot;&gt;&lt;a href=&quot;#fn1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;という便利なLR(1)パーザージェネレーターがあります｡
ocamlyaccよりも高機能で､menhirコマンドにも多くの便利オプションがあります｡&lt;/p&gt;
&lt;h2 id=&quot;3-1&quot;&gt;3-1. セッション&lt;/h2&gt;
&lt;p&gt;まずMenhirをインストールしてください｡OPAMやOSのパッケージマネージャーを使ってください｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell-session&quot; data-lang=&quot;shell-session&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; opam &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;menhir
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt; とか
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; yaourt &lt;span class=&quot;nt&quot;&gt;-S&lt;/span&gt; ocaml-menhir &lt;span class=&quot;c&quot;&gt;# Archには公式リポジトリーに入ってない! 残念&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以下のようなuntyped lambda calculus + listを考える｡&lt;/p&gt;
&lt;div&gt;
$$
\begin{array}{rcl}
S    &amp;amp; \leftarrow &amp;amp; Term\\
Term &amp;amp; \leftarrow &amp;amp; Lamb\ /\ Var\ /\ List\ /\ App\\
Lamb &amp;amp; \leftarrow &amp;amp; “\backslash”\ Var\ “.”\ Term\\
Var  &amp;amp; \leftarrow &amp;amp; \left[a\text{-}zA\text{-}Z\right]\left[a\text{-}zA\text{-}Z0\text{-}9\right]*\\
List &amp;amp; \leftarrow &amp;amp; “\left[” \left(\left(Term\ “,”\right)*\ Term\right)? “\right]”\\
App  &amp;amp; \leftarrow &amp;amp; Term\ Term
\end{array}
$$
&lt;/div&gt;
&lt;p&gt;こんな感じだろうか｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/src/menhir_example/syntax.ml&quot;&gt;src/menhir_example/syntax.ml&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;codeline with_caption&quot;&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;syntax.ml&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Var&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lamb&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;今回はシンタックスだけ考えればいいから､もうええわ｡&lt;/p&gt;
&lt;p&gt;パーザーにレキサーあり､という格言の通り､対応するレキサーを書きます｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/src/menhir_example/lexer.mll&quot;&gt;src/menhir_example/lexer.mll&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;codeline with_caption&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;lexer.mll&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Parser&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lexing&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\t'&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;A'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Z'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;rule&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\\'&lt;/span&gt;          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BACKSLASH&lt;/span&gt;                            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'.'&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOT&lt;/span&gt;                                  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;COMMA&lt;/span&gt;                                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LBRAC&lt;/span&gt;                                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RBRAC&lt;/span&gt;                                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LPAREN&lt;/span&gt;                               &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;'&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RPAREN&lt;/span&gt;                               &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xlower&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lexeme&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lexbuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lexbuf&lt;/span&gt;                         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eof&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EOF&lt;/span&gt;                                  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sprintf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;At offset %d: unexpected character.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Lexing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lexeme_start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lexbuf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
                                                           &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Menhirもocamllexを呼んでる(と思う)んでここは共通やね｡&lt;/p&gt;
&lt;h2 id=&quot;3-2-review-ocamlyacc&quot;&gt;3-2. review ocamlyacc&lt;/h2&gt;
&lt;p&gt;リメンバーocamlyacc､ということじゃ｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/src/menhir_example/parser.mly&quot;&gt;src/menhir_example/parser.mly&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;codeline with_caption&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;parser1.mly&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Syntax&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LBRAC&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RBRAC&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LPAREN&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RPAREN&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BACKSLASH&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOT&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;COMMA&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lamb&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LPAREN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RPAREN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lamb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BACKSLASH&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lamb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lstcont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;COMMA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lstcont&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LBRAC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lstcont&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RBRAC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;[&lt;a href=&quot;#fn1&quot;&gt;1&lt;/a&gt;]によるとocamlyaccと90%の互換性があるということで､ocamlyaccが受理できるmlyファイルはmenhirも受理します｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell-session&quot; data-lang=&quot;shell-session&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;lexer.mll  parser.mly  syntax.ml
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; ocamlyacc parser.mly
&lt;span class=&quot;go&quot;&gt;8 shift/reduce conflicts.
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; menhir parse.mly
&lt;span class=&quot;go&quot;&gt;Warning: 2 states have shift/reduce conflicts.
Warning: 8 shift/reduce conflicts were arbitrarily resolved.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ええですな｡&lt;/p&gt;
&lt;h2 id=&quot;3-3-dive-to-deep&quot;&gt;3-3. dive to deep&lt;/h2&gt;
&lt;h3 id=&quot;3-3-1-naming-token&quot;&gt;3-3-1. naming token&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;{}&lt;/code&gt;の中でトークンを参照するときに&lt;code&gt;$1&lt;/code&gt;とかやるの面倒くさい!
複雑になってくると何番目のトークンかをいちいち数えるのは面倒ですね｡
ここでトークンに名前を付けられるという素晴らしいアレがあります｡
&lt;code&gt;lamb&lt;/code&gt;ルールをやっていっましょう｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;n&quot;&gt;lamb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BACKSLASH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lamb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;オオ! これはわかりやすい｡&lt;/p&gt;
&lt;h3 id=&quot;3-3-2-parameterized-rule&quot;&gt;3-3-2. parameterized rule&lt;/h3&gt;
&lt;p&gt;非常に便利な関数がいくつか用意されている｡
&lt;code&gt;lstcont&lt;/code&gt;､&lt;code&gt;lst&lt;/code&gt;ルールをもっと賢くエイヤッとやってみましょう｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LBRAC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;separated_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;COMMA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RBRAC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;オオッ､なんかインテリジェンスが高まっているな｡
&lt;code&gt;separated_list(SEP, RULE)&lt;/code&gt;で&lt;code&gt;(RULE SEP)* RULE&lt;/code&gt;みたいなものを発射してくれます｡
偉い｡&lt;/p&gt;
&lt;p&gt;他にも偉い関数の数々&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;option(X)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ルール&lt;code&gt;X&lt;/code&gt;にマッチすれば&lt;code&gt;Some(Xが返す値)&lt;/code&gt;を返し､なければ&lt;code&gt;None&lt;/code&gt;を返す&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;list(X)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;X*&lt;/code&gt;みたいなやつ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nonempty_list(X)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;X+&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nonempty_separated_list(SEP, X)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;はい&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-3-3-user-defined-parameterized-rule&quot;&gt;3-3-3. user defined parameterized rule&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;separated_list&lt;/code&gt;みたいなものをユーザーも定義できる｡最高｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;%public xlist(X):
   | LBRAC lst = separated_list(COMMA, X) RBRAC { lst }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;何かを詰め込んだリストがホラこんな簡単に! 作れるわけだ｡&lt;/p&gt;
&lt;h3 id=&quot;3-3-4&quot;&gt;3-3-4. 他&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;%start&lt;/code&gt;と&lt;code&gt;%type&lt;/code&gt;を一緒にかける&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で､こんな感じに&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/src/menhir_example/parser2.mly&quot;&gt;src/menhir_example/parser2.mly&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;codeline with_caption&quot;&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;parser2.mly&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Syntax&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LBRAC&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RBRAC&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LPAREN&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RPAREN&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BACKSLASH&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOT&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;COMMA&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EOF&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%%&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lamb&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LPAREN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RPAREN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lamb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BACKSLASH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VAR&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lamb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LBRAC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;separated_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;COMMA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;term&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RBRAC&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;この言語ではあまり味が出ないですね…!!!&lt;/p&gt;
&lt;h3 id=&quot;3-3-5&quot;&gt;3-3-5. 便利なオプション達&lt;/h3&gt;
&lt;p&gt;menhirはパーザーをジェネレートするだけでなく､デバッグ機能などもいい感じです｡
詳細はヘルプなどを見ていただくとして､数点ピッカップします｡&lt;/p&gt;
&lt;h4 id=&quot;interactive-mode&quot;&gt;interactive mode&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell-session&quot; data-lang=&quot;shell-session&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; menhir &lt;span class=&quot;nt&quot;&gt;--interpret&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--interpret-show-cst&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--interpret-error&lt;/span&gt; parser2.mly
&lt;span class=&quot;go&quot;&gt;Warning: 2 states have shift/reduce conflicts.
Warning: 8 shift/reduce conflicts were arbitrarily resolved.
LPAREN BACKSLASH VAR DOT LBRAC VAR COMMA VAR RBRAC RPAREN LPAREN BACKSLASH VAR DOT VAR RPAREN
ACCEPT
[parse:
  [term:
    [app:
      [term:
        LPAREN
        [term:
          [lamb:
            BACKSLASH
            VAR
            DOT
            [term:
              [lst:
                LBRAC
                [loption(separated_nonempty_list(COMMA,term)):
                  [separated_nonempty_list(COMMA,term):
                    [term: VAR]
                    COMMA
                    [separated_nonempty_list(COMMA,term): [term: VAR]]
                  ]
                ]
                RBRAC
              ]
            ]
          ]
        ]
        RPAREN
      ]
      [term:
        LPAREN
        [term: [lamb: BACKSLASH VAR DOT [term: VAR]]]
        RPAREN
      ]
    ]
  ]
  EOF
]
VAR VAR
ACCEPT
[parse: [term: [app: [term: VAR] [term: VAR]]] EOF]
INVALIDTOKEN
File &quot;(stdin)&quot;, line 3, characters 0-12:
Error: &quot;INVALIDTOKEN&quot; is not a known terminal symbol.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;すげぇ! 対話的にトークン列を渡すと解析木を出してくれる､偉い｡&lt;/p&gt;
&lt;h4 id=&quot;graph&quot;&gt;graph&lt;/h4&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell-session&quot; data-lang=&quot;shell-session&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; menhir &lt;span class=&quot;nt&quot;&gt;--graph&lt;/span&gt; parser2.mly
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt; dot &lt;span class=&quot;nt&quot;&gt;-Tpng&lt;/span&gt; parser2.dot &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; parser2.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/pictures/2017-12-03-Menhir%E3%81%8C%E4%BE%BF%E5%88%A9/menhir.png&quot; alt=&quot;menhir.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;ウオ〜縦長だがどういう感じなのかわかりますね! これは偉大&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;他にもいろんなオプションがあります｡&lt;code&gt;menhir --help&lt;/code&gt;しろ｡&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. おわりに&lt;/h1&gt;
&lt;p&gt;もう12月4日になっちゃったッピ〜〜!!!! というわけで解散してください｡&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id=&quot;fn1&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://gallium.inria.fr/%7Efpottier/menhir/&quot;&gt;http://gallium.inria.fr/~fpottier/menhir/&lt;/a&gt; &lt;a href=&quot;#fnref1&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;</description>
        <pubDate>Sun, 03 Dec 2017 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2017/12/03/Menhir%E3%81%8C%E4%BE%BF%E5%88%A9.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2017/12/03/Menhir%E3%81%8C%E4%BE%BF%E5%88%A9.html</guid>
        
        <category>OCaml</category>
        
        <category>WORD</category>
        
        
      </item>
    
      <item>
        <title>OCamlでevalして結果をstringで得る</title>
        <description>&lt;p&gt;こんにちは､何者でもなくなりました｡&lt;/p&gt;
&lt;p&gt;さて､今はOCamlとLaTeXしか書いてないという状況に陥りました｡人生にありがちな時期ですね｡&lt;/p&gt;
&lt;h1 id=&quot;1-ocaml-eval&quot;&gt;1. OCamlでも&lt;code&gt;eval&lt;/code&gt;がしたい!&lt;/h1&gt;
&lt;p&gt;ではこちらをどうぞ｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/33291754/eval-a-string-in-ocaml&quot;&gt;“Eval” a string in OCaml - stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下引用(upop上で動くよ)｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;eval&lt;label id=&quot;fig-origeval&quot;&gt;&lt;/label&gt;&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;compiler-libs&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;(* Assuming you're using utop, if compiling then this is the package you need *)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as_buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Lexing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Toploop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_toplevel_phrase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as_buf&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Toploop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute_phrase&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;std_formatter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parsed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;compiler-libs&lt;/code&gt;というOCamlに同梱されているライブラリーを使いますと､このようにevaれるわけですね｡&lt;/p&gt;
&lt;h1 id=&quot;2-eval&quot;&gt;2. &lt;code&gt;eval&lt;/code&gt;の結果を文字列で取りたい!&lt;/h1&gt;
&lt;p&gt;evaってるのは&lt;code&gt;Toploop.execute_phrase&lt;/code&gt;で､戻り値はランタイムエラーしたかそうでないかの&lt;code&gt;bool&lt;/code&gt;になります｡
上記では&lt;code&gt;ignore&lt;/code&gt;で捨てて&lt;code&gt;unit&lt;/code&gt;にしてますね｡&lt;/p&gt;
&lt;p&gt;例えば､&lt;code&gt;eval &quot;int_of_char 'a';;&quot;&lt;/code&gt;なんてしたときに戻り値が&lt;code&gt;&quot;97&quot;&lt;/code&gt;という&lt;code&gt;string&lt;/code&gt;だと嬉しい人がいるかもしれない｡&lt;/p&gt;
&lt;p&gt;俺なら実装やってくだけだな&lt;/p&gt;
&lt;h1 id=&quot;3&quot;&gt;3. 出力先&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;format&lt;/code&gt;型の話をしよう｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://d.hatena.ne.jp/camlspotter/20091102/1257099984&quot;&gt;OCaml 標準ライブラリ探訪 #3.0: Printf: 便利だけどいろいろ謎のある奴 - Oh, you  `re no (fun _ → more)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://qnighy.hatenablog.com/entry/2017/01/26/215948&quot;&gt;OCamlのformat (型安全なprintf/scanf) の仕組み - 簡潔なQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;話おわり&lt;/p&gt;
&lt;h1 id=&quot;4&quot;&gt;4. 解&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;#fig-origeval&quot;&gt;eval&lt;/a&gt;の&lt;code&gt;Toploop.execute_phrase&lt;/code&gt;に渡している引数を観察すると､
&lt;code&gt;true&lt;/code&gt;と&lt;code&gt;Format.std_formatter&lt;/code&gt;を渡していることが分かる｡&lt;/p&gt;
&lt;p&gt;&lt;code&gt;true&lt;/code&gt;は後述｡第2引数は件の&lt;code&gt;format&lt;/code&gt;じゃねえかい｡
このformatの出力先を&lt;code&gt;string ref&lt;/code&gt;みたいなところに出してその中身を返せば行けそうだ｡
でもどうやって? まずは&lt;code&gt;Format.std_formatter&lt;/code&gt;がどうなってるかを見てみよう｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ocaml/ocaml/blob/trunk/stdlib/format.ml#L1038&quot;&gt;stdlib/format.ml#L1038&lt;/a&gt;で定義されている｡
&lt;code&gt;formatter_of_out_channel&lt;/code&gt;が何者か辿ってみると､&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;formatter_of_out_channel(stdlib/format.ml#L1018)&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter_of_out_channel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;make_formatter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_substring&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;了解!&lt;/p&gt;
&lt;p&gt;この&lt;code&gt;make_formatter&lt;/code&gt;って使えそうだなと思って定義を見てみるが全くわからない｡
幸運にも､&lt;code&gt;formatter_of_out_channel&lt;/code&gt;の真下にわかりやすい例がある｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;formatter_of_buffer(stdlib/format.ml#L1023)&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;formatter_of_buffer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;make_formatter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_substring&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Buffer.add_substring&lt;/code&gt;と&lt;code&gt;ignore&lt;/code&gt;という､わかりやすい関数で構成されている｡
これなら型がたちどころに分かるな｡&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ocaml.jp/refman/libref/Buffer.html#VALadd_substring&quot;&gt;Module Buffer - OCaml.jp&lt;/a&gt;
を見るとsubstringしてバッファーにくっつける感じですね｡
そしてバッファー&lt;code&gt;b&lt;/code&gt;を部分適用しているので､なるほど&lt;code&gt;make_formatter&lt;/code&gt;に渡しているのは&lt;code&gt;string -&amp;gt; int -&amp;gt; int -&amp;gt; unit&lt;/code&gt;と&lt;code&gt;unit -&amp;gt; unit&lt;/code&gt;か｡&lt;/p&gt;
&lt;p&gt;もう見えてきましたね｡substringを&lt;code&gt;string ref&lt;/code&gt;などに書いて参照すればOK｡
あとはやるだけ｡&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;eval returning string&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-ocaml&quot; data-lang=&quot;ocaml&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;(* 書き出す string ref *)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ref_b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_formatter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ref_b&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;records&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;(* 新しいフォーマッター *)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as_buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Lexing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Toploop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_toplevel_phrase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as_buf&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Toploop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute_phrase&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parsed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ignore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;records&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;records&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ret&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;はい実行&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;
&lt;span class=&quot;listing-name&quot;&gt;utop&lt;/span&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;utop # eval &quot;int_of_char 'a';;&quot;;;
- : string = &quot;- : int = 97\n&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;ありがたい! 型名まで付いている!!! いらない!!!!!&lt;/p&gt;
&lt;p&gt;おわりだよ〜&lt;/p&gt;
&lt;p&gt;その前に&lt;code&gt;Toploop.execute_phrase&lt;/code&gt;に渡している&lt;code&gt;bool&lt;/code&gt;は､実行結果をフォーマッターに渡すか否かですはい解散&lt;/p&gt;
&lt;h1 id=&quot;20171118&quot;&gt;追記20171118&lt;/h1&gt;
&lt;p&gt;こんなことしなくても&lt;code&gt;Format.str_formatter&lt;/code&gt;と&lt;code&gt;Format.flush_str_formatter&lt;/code&gt;という便利なものがあってじゃな…｡&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;『ブレードランナー 2049』観に行きましたが全部最高でした｡&lt;/p&gt;
&lt;p&gt;『ブレードランナー』の続編としての立ち位置､ストーリー､BGM､ハリソン・フォード…全て…｡&lt;/p&gt;</description>
        <pubDate>Sat, 18 Nov 2017 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2017/11/18/OCaml%E3%81%A7eval%E3%81%97%E3%81%A6%E7%B5%90%E6%9E%9C%E3%82%92string%E3%81%A7%E5%BE%97%E3%82%8B.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2017/11/18/OCaml%E3%81%A7eval%E3%81%97%E3%81%A6%E7%B5%90%E6%9E%9C%E3%82%92string%E3%81%A7%E5%BE%97%E3%82%8B.html</guid>
        
        <category>OCaml</category>
        
        
      </item>
    
      <item>
        <title>ロースト</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡&lt;/p&gt;
&lt;h1 id=&quot;1&quot;&gt;1. モチベーション&lt;/h1&gt;
&lt;p&gt;近年､肉を焼くおっさん&lt;sup id=&quot;fnref1&quot; title=&quot;Nusret – Twitter &quot;&gt;&lt;a href=&quot;#fn1&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;に触発された｡&lt;/p&gt;
&lt;p&gt;また､&lt;a href=&quot;https://www.amazon.co.jp/%E6%96%B0%E7%B1%B3%E5%A7%89%E5%A6%B9%E3%81%AE%E3%81%B5%E3%81%9F%E3%82%8A%E3%81%94%E3%81%AF%E3%82%934-%E9%9B%BB%E6%92%83%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%B9NEXT-%E6%9F%8A-%E3%82%86%E3%81%9F%E3%81%8B/dp/404893242X&quot;&gt;『新米姉妹のふたりごはん』 4巻&lt;/a&gt;が出たので
1巻&lt;sup id=&quot;fnref2&quot; title=&quot;柊ゆたか Dec 18, 2015 新米姉妹のふたりごはん 1巻 &quot;&gt;&lt;a href=&quot;#fn2&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;を読み返したところ､ 美味しそうにローストビーフを作っているじゃあありませんか｡&lt;/p&gt;
&lt;h1 id=&quot;2&quot;&gt;2. 取り組み&lt;/h1&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;ひつじさんかわいそう… &lt;a href=&quot;https://t.co/VKyuoesJHR&quot;&gt;pic.twitter.com/VKyuoesJHR&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/864432422800179200?ref_src=twsrc%5Etfw&quot;&gt;May 16, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;焼いていきです。 &lt;a href=&quot;https://t.co/rngAsgZP97&quot;&gt;pic.twitter.com/rngAsgZP97&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/866983522799583232?ref_src=twsrc%5Etfw&quot;&gt;May 23, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;このあたりで肉を焼く悦びを知り始める｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;みなさんは、真夏の夜ですか？ &lt;a href=&quot;https://t.co/7RbtL5mp4n&quot;&gt;pic.twitter.com/7RbtL5mp4n&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/871286109187133440?ref_src=twsrc%5Etfw&quot;&gt;June 4, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;これ淫夢&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;皿よりデカイ肉を焼くと面白い事が判明した。 &lt;a href=&quot;https://t.co/Z6GkC5tuDK&quot;&gt;pic.twitter.com/Z6GkC5tuDK&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/877100867429609473?ref_src=twsrc%5Etfw&quot;&gt;June 20, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;塩振ってるおっさんのgifに触発されたわけですが、最高の出来になった。 &lt;a href=&quot;https://t.co/U4v6dGQ1iy&quot;&gt;pic.twitter.com/U4v6dGQ1iy&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/883292390831792128?ref_src=twsrc%5Etfw&quot;&gt;July 7, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;頭部が一番香ばしかった｡胴体は甲殻類っぽい｡寄生虫や細菌対策でよォ～く揚げたのでパリパリになってうまかった｡タルタルソースが合いますねぇ! &lt;a href=&quot;https://t.co/jEtx4ssT5Z&quot;&gt;pic.twitter.com/jEtx4ssT5Z&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/898587568802906113?ref_src=twsrc%5Etfw&quot;&gt;August 18, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;これ蝉&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;最凶武器と､最凶武器によって4分割された鶏 &lt;a href=&quot;https://t.co/NLb2i5LWzf&quot;&gt;pic.twitter.com/NLb2i5LWzf&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/904651369545572352?ref_src=twsrc%5Etfw&quot;&gt;September 4, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;[&lt;a href=&quot;#fn2&quot;&gt;2&lt;/a&gt;]にてローストビーフの執刀シーンでクソデカフォークが用いられており､触発された俺達は｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;豚な上に明らかに生っぽい以外は大変美味しい､ただ400gって多いですね｡ &lt;a href=&quot;https://t.co/881l7IyXMx&quot;&gt;pic.twitter.com/881l7IyXMx&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/909048521386475520?ref_src=twsrc%5Etfw&quot;&gt;September 16, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;生肉は危険であり､量も多いとつらいことを知る｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;黄金体験 &lt;a href=&quot;https://t.co/4gdtTA4ixr&quot;&gt;pic.twitter.com/4gdtTA4ixr&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/922384058360872960?ref_src=twsrc%5Etfw&quot;&gt;October 23, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;鉄皿最高｡肉が冷めないしナイフでガシガシやっても不安感が無い､ビジュアルが良い､等々｡アパートのオーブンが小さいので鉄皿半身しか入らないのが問題だ｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/922386349704978432?ref_src=twsrc%5Etfw&quot;&gt;October 23, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;鉄の皿は最高｡ただこれは底が深めなのでもはや鉄鍋ですね｡鉄鍋最高｡&lt;/p&gt;
&lt;h1 id=&quot;3-implementation&quot;&gt;3. implementation&lt;/h1&gt;
&lt;h2 id=&quot;3-1&quot;&gt;3-1. 準備&lt;/h2&gt;
&lt;p&gt;材料を用意する｡
場合によっては近所にスーパーがある場所などへ引っ越す必要がある｡&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;材料&lt;/th&gt;
&lt;th&gt;量&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;牛P(脂の少ない部位)&lt;/td&gt;
&lt;td&gt;250g〜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;オリーブオイル&lt;/td&gt;
&lt;td&gt;本当に少し&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;塩&lt;/td&gt;
&lt;td&gt;5振り(味付けあり) / 10振り(塩のみ)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;胡椒&lt;/td&gt;
&lt;td&gt;オプショナル(7振りくらいがいいか)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;フライパン(テフロン製でない)&lt;/td&gt;
&lt;td&gt;Pが焼ける大きさ1つ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;鍋&lt;/td&gt;
&lt;td&gt;Pが余裕で入る大きさ1つ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ジップロック&lt;/td&gt;
&lt;td&gt;Pが入る大きさ1つ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ストロー&lt;/td&gt;
&lt;td&gt;オプショナル(1つ)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;氷&lt;/td&gt;
&lt;td&gt;オプショナル(適量)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;今回は米国産牛モモブロック(ローストビーフ用) 353g 667円を用いた｡
形がととのっていると焼きやすく､火の通りが均一になるなどボーナスがある｡
また､新鮮なほうが美味しくなる､等々､選択にもコツがある｡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1717.jpg&quot; alt=&quot;肉&quot; title=&quot;肉&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-2&quot;&gt;3-2. 調理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;塩､コショウを塗りたくったあとにオリーブオイルを塗りたくる｡&lt;/p&gt;

&lt;p&gt;塩で肉を引き締める｡また焼いた後よりも焼く前にかけておいたほうが馴染む｡&lt;/p&gt;

&lt;p&gt;フライパンで焼く時に張り付かないためにオリーブオイルを塗る｡
あっさり仕上げたいのでオリーブオイルをチョイスした｡&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1718.jpg&quot; alt=&quot;塗った肉&quot; title=&quot;塗った肉&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;強火で熱したフライパンにぶっこみ､全面に焼き目が付く程度に焼く｡&lt;/p&gt;

&lt;p&gt;ダラダラ焼いてると中まで火が通ってしまい､柔らか〜な食感が得られない｡
では何故俺達は肉を焼く…?&lt;/p&gt;

&lt;p&gt;肉を焼くのが楽しいからだけかもしれない｡
だがそれ以上に理由が必要か?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1719.jpg&quot; alt=&quot;はみ出&quot; title=&quot;はみ出&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ジップロックに焼いた牛を入れ､できるだけ空気を抜いて密封する｡ここでストローがあると便利｡&lt;/p&gt;

&lt;p&gt;すでにうまそう
&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1723.jpg&quot; alt=&quot;真空&quot; title=&quot;真空肉&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;鍋に水をつっこむ｡牛の入っているジップロックの牛部分が完全に埋まる程度に水が必要｡&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;鍋に入った水を､鍋底に気泡が出来る程度に加熱して弱火にする｡&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;鍋に入った水に牛の入ったジップロックを突っ込む｡牛部分が全部埋まるように｡&lt;label id=&quot;proc6&quot;&gt;&lt;/label&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1726.jpg&quot; alt=&quot;あっため&quot; title=&quot;あっため中&quot;&gt;&lt;/p&gt;

&lt;p&gt;火の加減はこんな具合に&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1727.jpg&quot; alt=&quot;火の加減&quot; title=&quot;火の加減&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#proc6&quot;&gt;手順6.&lt;/a&gt; から5分たったら火を止める｡&lt;label id=&quot;proc7&quot;&gt;&lt;/label&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#proc7&quot;&gt;手順7.&lt;/a&gt; から3分たったら点火し弱火に&lt;label id=&quot;proc8&quot;&gt;&lt;/label&gt;｡&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#proc8&quot;&gt;手順8.&lt;/a&gt; から5分たったら火を止める｡&lt;label id=&quot;proc9&quot;&gt;&lt;/label&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#proc9&quot;&gt;手順9.&lt;/a&gt; から3分たったら点火し弱火に｡&lt;label id=&quot;proc10&quot;&gt;&lt;/label&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#proc10&quot;&gt;手順10.&lt;/a&gt; から5分たったら火を止める｡&lt;label id=&quot;proc11&quot;&gt;&lt;/label&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#proc11&quot;&gt;手順11.&lt;/a&gt; から3分たったら点火し弱火に｡&lt;label id=&quot;proc12&quot;&gt;&lt;/label&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#proc12&quot;&gt;手順12.&lt;/a&gt; から5分たったら火を止める｡&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;鍋から取り出した牛をしばらく冷やす｡ここで氷があると便利｡&lt;/p&gt;

&lt;p&gt;余熱による過熟を防ぐことが狙い｡&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1730.jpg&quot; alt=&quot;冷ます&quot; title=&quot;冷ます&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;おわり&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;あとは干して軒先に飾ったり玄関や居間に置いて観賞することや､食べることができる｡&lt;/p&gt;
&lt;p&gt;私は食べることを選択しました｡お前はどうだ?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1735.jpg&quot; alt=&quot;うまそう&quot; title=&quot;うまそう&quot;&gt;&lt;/p&gt;
&lt;p&gt;うまいローストビーフをわさび醤油で食べるとうまいことが知られている｡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/pictures/2017-10-24-%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88/DSC_1736.jpg&quot; alt=&quot;うまい&quot; title=&quot;うまい&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;現在『FLOWERS』冬篇を始めるために春篇からやり直している｡
このメガネ何言う天然､沙々貴姉妹お前レッドカード過ぎてるぞ､等々､周回の余裕がある｡&lt;/p&gt;
&lt;p&gt;えりかさんと千鳥さんのイチャラブ夏篇では美味しそうな料理が大量に出るので､ゲームをプレイしながらボクも登場する料理を作っていこうと考えており候｡&lt;/p&gt;
&lt;p&gt;おわりだよ&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;part-65432df8bd7&quot;&gt;近況&lt;/h1&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;泊りがけで江ノ島花火大会楽しかったです😭 &lt;a href=&quot;https://t.co/4QgOBcXoxX&quot;&gt;pic.twitter.com/4QgOBcXoxX&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/921965080316542978?ref_src=twsrc%5Etfw&quot;&gt;October 22, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;卒研がスムーズに進んでいるので､先生がFLOPS2018に出す予定の論文の実装をやってます｡何も考えずに実装するだけで共著になるのでオトクな気分ですね｡&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id=&quot;fn1&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/nusr_ett&quot;&gt;Nusret – Twitter&lt;/a&gt; &lt;a href=&quot;#fnref1&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id=&quot;fn2&quot;&gt;
&lt;p&gt;柊ゆたか Dec 18, 2015 &lt;a href=&quot;https://www.amazon.co.jp/%E6%96%B0%E7%B1%B3%E5%A7%89%E5%A6%B9%E3%81%AE%E3%81%B5%E3%81%9F%E3%82%8A%E3%81%94%E3%81%AF%E3%82%93-1-%E9%9B%BB%E6%92%83%E3%82%B3%E3%83%9F%E3%83%83%E3%82%AF%E3%82%B9NEXT-%E6%9F%8A%E3%82%86%E3%81%9F%E3%81%8B/dp/4048656538/&quot;&gt;新米姉妹のふたりごはん 1巻&lt;/a&gt; &lt;a href=&quot;#fnref2&quot; rev=&quot;footnote&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;</description>
        <pubDate>Tue, 24 Oct 2017 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2017/10/24/%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2017/10/24/%E3%83%AD%E3%83%BC%E3%82%B9%E3%83%88.html</guid>
        
        <category>雑感</category>
        
        <category>肉</category>
        
        
      </item>
    
      <item>
        <title>キラキラ受験記</title>
        <description>&lt;p&gt;こんにちは､びしょ〜じょです｡&lt;/p&gt;
&lt;p&gt;というわけで､T大学大学院コンピューターサイエンス専攻に合格しました｡
落ちる可能性ももちろん考えていたし､入試に落ちると12人の妹と一緒に孤島で2クール生活するという言い伝えに震える日々でした｡
無事合格してよかったですね｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;T大学コンピューターサイエンス専攻に合格しました､皆様の支えあってこその結果だったと思います｡ここに感謝の気持ちを云々&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/907468721274241029?ref_src=twsrc%5Etfw&quot;&gt;September 12, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;大学院でした､何をやっても駄目&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/907468838404472833?ref_src=twsrc%5Etfw&quot;&gt;September 12, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;では､彼の活動を追っていきましょう｡&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;院試の筆記は学部2年程度の知識しか問われてないので余裕ゥ〜と思ったけどシーゲンゴで木やグラフやポインターなどと触れ合う必要があるので脳が簡単に壊れた｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/898101814318333952?ref_src=twsrc%5Etfw&quot;&gt;August 17, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;このあたりで院試の勉強をはじめた｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;次の番組は『どっちの料理ショー セミ vs エビ with タルタルソース』です｡ &lt;a href=&quot;https://t.co/C5dsfKwT8G&quot;&gt;pic.twitter.com/C5dsfKwT8G&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/898544575626723329?ref_src=twsrc%5Etfw&quot;&gt;August 18, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;蝉も食べた｡我ながら準備がいい｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;院試の勉強が進んでいるが､やりたいことの本質は非常に単純なのにC89で書かれた読みづらいコードを解読するという過去問に当たるたび､本当にこの大学院に進むべきなのか疑わしくなる｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/899611554076807168?ref_src=twsrc%5Etfw&quot;&gt;August 21, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;大学院を疑い始める｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;今日は明日が院試なんで､『青い花』を全話観たいと､えぇ､思います｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/900174211171274752?ref_src=twsrc%5Etfw&quot;&gt;August 23, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;院試のためにストパンを見て脳を活性化させている｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/900330784476639232?ref_src=twsrc%5Etfw&quot;&gt;August 23, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;パンツが屯田年で!… パンツが…屯田年…&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/900331391853805568?ref_src=twsrc%5Etfw&quot;&gt;August 23, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;しかし攻撃の手を休めない｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;筆記試験ではアルゴリズムとかなんとか以前にC言語に関するクイズだったし､面接では高校生に説明するように用語を噛み砕けとアドバイスされたので､ボクの進学先は大学院でない可能性がある｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/900739920385392641?ref_src=twsrc%5Etfw&quot;&gt;August 24, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;筆記試験が終わる｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;面接で聞かれやすい質問であるところの｢最近読んだ百合漫画はなんですか?｣に対し､もちろん『ゆるゆり』と答える｡面接という枠を取っ払って活発な議論に発展させていく｡これがデキる受験生｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/900768373641838596?ref_src=twsrc%5Etfw&quot;&gt;August 24, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;翌日の面接のイメージトレーニングも怠らない｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;卒研､院でのがんばり､これまでのがんばりを聞かれたけど､いずれもつつがなく答えられたので問題なさそうですね､はい｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/900956828783091712?ref_src=twsrc%5Etfw&quot;&gt;August 25, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;フィニッシュ｡&lt;/p&gt;
&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;院に合格したが､次のチェックポイントは学部で奨学金契約破棄された人間が大学院で奨学金を手に入れられるかどうかですねぇ…｡バイトは今の1/2くらいしか行きたくないし､もう少しいうと0/2くらいしか行きたくない｡&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/907548634505342976?ref_src=twsrc%5Etfw&quot;&gt;September 12, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;しかし､少年の戦いはまだまだ続く…｡&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;びしょ〜じょ先生に手紙を送って応援しよう!
&lt;/p&gt;&lt;div class=&quot;enclosed-tweet&quot; align=&quot;center&quot;&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;
&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;ところで､祝賀会の様子です｡&lt;a href=&quot;https://t.co/5XTXrCj17w&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://t.co/5XTXrCj17w&quot;&gt;https://t.co/5XTXrCj17w&lt;/a&gt;&lt;/p&gt;— びしょ〜じょ (@Nymphium) &lt;a href=&quot;https://twitter.com/Nymphium/status/907469206316228608?ref_src=twsrc%5Etfw&quot;&gt;September 12, 2017&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;</description>
        <pubDate>Thu, 14 Sep 2017 00:00:00 +0900</pubDate>
        <link>https://nymphium.github.io/2017/09/14/%E9%99%A2%E8%A9%A6.html</link>
        <guid isPermaLink="true">https://nymphium.github.io/2017/09/14/%E9%99%A2%E8%A9%A6.html</guid>
        
        <category>雑感</category>
        
        
      </item>
    
  </channel>
</rss>
